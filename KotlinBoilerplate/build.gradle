// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.5.21'
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {

    ext {
        version_build_tools = "27.0.3"

        version_sdk_compile = 30
        version_build_tool = "30.0.2"
        version_sdk_min = 22
        version_sdk_target = 30

        version_lib_android_x = "1.6.0"
        version_lib_android_x_appcompat = "1.3.1"
        version_lib_constraintlayout = "2.0.4"
        version_lib_googlematerial = "1.4.0"
        version_lib_dagger = "2.23"
        version_lib_lifecycle_extension = "2.2.0"
        version_lib_lifecycle = "2.3.1"
        version_lib_rxlifecycle = "4.0.2"
        version_lib_rxkotlin = "3.0.1"
        version_lib_rxrelay = "3.0.0"
        version_lib_rxandroid = "3.0.0"
        version_lib_rxbinding = "4.0.0"
        version_lib_kotlinx_coroutines = "1.4.2"
    }

    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task generateLocalizations {

    String script = 'if hash twine 2>/dev/null; then ' +
            'twine generate-localization-file localization/twine.txt app/src/main/res/values/strings.xml --lang en --format android; ' +
            'twine generate-localization-file localization/twine.txt app/src/main/res/values-it/strings.xml --lang it --format android; ' +
            'fi'

//    exec {
//        executable "sh"
//        args '-c', script
//    }
}
