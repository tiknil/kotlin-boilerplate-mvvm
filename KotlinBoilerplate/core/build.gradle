apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion version_sdk_compile


    defaultConfig {
        minSdkVersion version_sdk_min
        targetSdkVersion version_sdk_target

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles fileTree('proguard').asList().toArray()
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles fileTree('proguard').asList().toArray()
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Moduli
    api project(':models')

    api "androidx.appcompat:appcompat:$version_lib_android_x_appcompat"
    api "androidx.core:core-ktx:$version_lib_android_x"
    api "androidx.constraintlayout:constraintlayout:$version_lib_constraintlayout"
    api "com.google.android.material:material:$version_lib_googlematerial"

    //Android databinding
    kapt 'com.android.databinding:compiler:3.1.4'

    // Timber
    api 'com.github.ajalt:timberkt:1.5.1'

    // Dagger 2 (Android Support)
    api "com.google.dagger:dagger-android-support:$version_lib_dagger"

    // RxKotlin
    api "io.reactivex.rxjava3:rxandroid:$version_lib_rxandroid"
    api "io.reactivex.rxjava3:rxkotlin:$version_lib_rxkotlin"
    api "com.jakewharton.rxrelay3:rxrelay:$version_lib_rxrelay"

    // ViewModel and LiveData
    api "androidx.lifecycle:lifecycle-extensions:$version_lib_lifecycle_extension"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$version_lib_lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lib_lifecycle"

    // Libreria per bindare gli observable in base al lifecycle di Activity e Fragment
    api "com.trello.rxlifecycle4:rxlifecycle-kotlin:$version_lib_rxlifecycle"
    api "com.trello.rxlifecycle4:rxlifecycle-components:$version_lib_rxlifecycle"

    // RxBinding
    api "com.jakewharton.rxbinding4:rxbinding-core:$version_lib_rxbinding"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_lib_kotlinx_coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_lib_kotlinx_coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:$version_lib_kotlinx_coroutines"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
